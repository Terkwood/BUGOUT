# docker-compose for a micro instance which
# handles 24/7 traffic

version: '2'
services:
  redis:
    image: redis
    ports:
      - "6379"
    volumes:
      - /mnt/stateful_partition/BUGOUT/redis:/data:z
    privileged: true
    command: /bin/bash -c 'echo never > /sys/kernel/mm/transparent_hugepage/enabled && echo 65535 > /proc/sys/net/core/somaxconn ; redis-server'
  gateway:
    build: gateway/.
    ports:
      - "3012:3012"
    volumes: #https://stackoverflow.com/questions/44139279/docker-mounting-volume-with-permission-denied   for SELinux
      - ${PWD}/gateway/.env:/var/BUGOUT/gateway/.env:z
    environment:
      - BROKERS
  bugle:
    build: bugle/.
    links:
      - redis
    depends_on:
      - redis
    volumes:
      - ${PWD}/bugle/.env:/var/BUGOUT/bugle/.env:z
    environment:
      - DELAY_SECS
      - AWS_REGION
      - DISABLED
      - TAG_NAME
  micro-judge:
    build: micro-judge/.
    links:
      - "redis"
    depends_on:
      - "redis"
  micro-changelog:
    build: micro-changelog/.
    links:
      - "redis"
    depends_on:
      - "redis"
  micro-color-chooser:
    build: micro-color-chooser/.
    links:
      - "redis"
    depends_on:
      - "redis"
  micro-game-lobby:
    build: micro-game-lobby/.
    links:
      - "redis"
    depends_on:
      - "redis"
  micro-sync:
    build: micro-sync/.
    links:
      - "redis"
    depends_on:
      - "redis"
  botlink:
    build: botlink/.  
    depends_on:
      - "redis"
    volumes:
      - "./botlink/.env:/var/BUGOUT/botlink/.env:z"
  reverse-proxy:
    image: abiosoft/caddy
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - "botlink"
      - "gateway"
    volumes:
      - /mnt/stateful_partition/BUGOUT/reverse-proxy/Caddyfile:/etc/Caddyfile:z
      - /mnt/stateful_partition/BUGOUT/reverse-proxy/.caddy:/root/.caddy:z
